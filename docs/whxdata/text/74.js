rh._.exports({"0":[[" ","CLI Orchestration Action"]],"1":[[" ","CLI Orchestration Action"," ","Introduction"]],"2":[[" ","CLI orchestration, also known as command-line interface orchestration, refers to the process of coordinating and automating tasks and workflows through the command-line interface (CLI)."," ","Script can used .vbs, .js, bat, .exe etc."],[" ","Double click on the Business flow. In the Activity Actions, click on the ‘Add New (+)’ button shown below and click on Actions.    "," ","  Library’ shown below."," ","In the ‘General Actions’ tab, select the ‘CLI Orchestration Action’ then click on that arrow button highlighted below to add Action given in the field. "," ","or simply drag and drop the element."," ","Then Below screen should displayed."," ","Application/File Path"," ","                    Its mandatory field"," need to select script or executable file."," ","Wait for Process"," ","Action should wait until process gets complete."," ","Parse the result."," ","Result will parse based on the specified delimiter for clearer data segmentation and organization in output values."," ","Delimiter"," ","Its mandatory field. The character or sequence used to separate values. "," ","  5.  Input Values"," ","We can provide required arguments to given script."],[" ","1",". Msedge.exe executable path provides in application/file Path field. "," ","    Input Values grid required arguments given."," ","2",".  ","A “GetFilesCountInDirectory” script file attached in the Documents folder of the solution."," ","     The below screenshot shows how it will look like."," ","     Users can view/edit it in the Resources/Documents section in UI."," ","Run Action will perform the action."," ","In output value tab all console log will stored in the output log file if any data parse by delimiter will be show in the Output values directly."]],"3":[[" ","How to configure Action"],[" ","Example for CLI Orchestration Action"]],"id":"74"})