rh._.exports({"0":[["How to Setup Ginger for CRM-OMS"]],"1":[["\n  ","\n    "," ","\n    ","                     ","How to Setup Ginger Setup for CRM-OMS","\n    "," ","\n    "," ","\n    ","Contents","\n    ","Ginger Setup","\n    ","Steps","\n    "," ","\n    "," ","\n    "," ","\n    ","\n      ‎","\n    "],["\n    ","To incorporate Ginger capabilities in an ASCF SmartClient application, you need to make three changes to the application’s JNLP deployment: ","\n    ","1) add ","a tag to the workspace.xml file, ","\n    ","2) add the Ginger jar to the JNLP descriptor file, and 3) add the signed Ginger JAR to the JNLP WAR.","\n    ","\n    "," Materials needed:","\n    ","Contents of ","\\\\DAVIDFRE04\\GingerToolBox\\",". Use the corresponding Ginger jar depending on if your host app is v8 or v9. Ginger ToolBox requires the host app to use either ASCF 9.0 (any release) or ASCF 8.2 HF68 (or higher).","\n    ","SmartClient application JNLP EAR/WAR","\n    ","Windows machine for signing the Ginger jar","\n    "],["\n    "],["\n    ","Add the Ginger JAR to the JNLP descriptor file","\n    ","Find the .jnlp file in the application EAR’s WAR path. EX: JNLPServer/ear/war/AppName/AppName.jnlp","\n    ","Add a line for the Ginger JAR. EX: <jar href=\"Ginger_ASCF.jar\" version=\"9.0\"/>","\n    ","Add the Ginger JAR to the JNLP WAR","\n    ","Download the Ginger JAR from the above location","\n    ","Put the Ginger JAR in the same folder as the .jnlp file","\n    ","Sign the Ginger JAR","\n    ","Copy SignJar.cmd, Unsign. cmd, and MANIFEST.MF to a Windows machine (see Ginger download folder)","\n    ","In this same folder, make 2 temp folders, “signed” and “unsigned”","\n    ","All JNLP Jars need to be signed with the same certificate","\n    ","Option 1: your jar signing process involves a custom certificate","\n    ","Copy your AmdocsStoreName to the Windows folder","\n    ","Download the Ginger JAR from the above location to the unsigned folder","\n    ","Sign the JAR: SignJar.cmd -sc unsigned signed","\n    ","Move the Ginger JARs (*.jar and *.jar.pack.gz) from the “signed” folder to the .jnlp file folder","\n    ","Option 2: your jar signing process uses the default self-signing certificate","\n    ","Copy all SmartClient JARs (*.jar not *.jar.pack.gz) from the .jnlp file folder to the “signed” folder","\n    ","Unsign the JARs: SignJar.cmd -u signed unsigned","\n    ","Create the certificate file: SignJar.cmd -c","\n    ","Sign the JARs: SignJar.cmd -sc unsigned signed","\n    ","Move the JARs (*.jar and *.jar.pack.gz) from the “signed” folder to the .jnlp file folder","\n    ","Edit the workspace.xml","\n    ","Find the workspace.xml, possibly in the same path as the .jnlp file","\n    ","Add the Inject tag to workspace.xml just below the <Applications/> block (after the closing tag):","\n    ","<Inject>","\n    ","<ToolboxForm logicalFormName=\"GingerToolBox\" />","\n    ","</Inject>","\n    ","Restart the JNLP server","\n    ","Launch the SmartClient application from hyperlink on the AppName.jnlp web browser page","\n    "," ","\n  ","\n\n"]],"2":[["Ginger Setup"],[" "],["Steps"]],"id":"37"})